/**
RRL - Reflection Resource Library

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project (https://github.com/Timer/RRL).

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
**/
0:ct.r/*** LoginIndex = 'ct.r'.I [LoginIndex] ***/
44:dv.e/*** getFriendsWorlds = 'dv.e'.[I [FriendsWorlds] ***/
43:ie.h/*** getFriendsList = 'ie.h'.[Ljava/lang/String; [FriendsList] ***/
1:dd.x/*** getChatLines = 'dd.x'.[Lwe; [Messages] ***/
2:cg.D/*** getMyRSPlayer = 'cg.D'.Lcea; [LocalPlayer] ***/
3:pe.F/*** getBaseX = 'pe.F'.I [BaseX] ***/
4:ap.D/*** getBaseY = 'ap.D'.I [BaseY] ***/
7:bk.f/*** getNPCIndexArray = 'bk.f'.[I [NPCIndexes] ***/
38:kp.h/*** getLoopCycle = 'kp.h'.I [LoopCycle] ***/
6:gfa.u/*** getNPCNodes = 'gfa.u'.[Lqha; [NPCNodes] ***/
5:ve.b/*** getNPCCount = 've.b'.I [NPCCount] ***/
33:ti.d/*** getGroundByteArray = 'ti.d'.[[[B [GroundBytes] ***/
30:cea.id/*** getLoadedPlane = 'cea.id'.I [CurrentPlane] ***/
31:wk.i/*** getPlaneArray = 'wk.i'.[Ls; [Planes] ***/
34:jga.kb/*** getToolkit = 'jga.kb'.Lha; [ToolKit] ***/
14:rfa.o/*** getMenuX = 'rfa.o'.I [MenuX] ***/
15:nv.j/*** getMenuY = 'nv.j'.I [MenuY] ***/
16:oq.hb/*** getMenuWidth = 'oq.hb'.I [MenuW] ***/
17:ml.w/*** getMenuHeight = 'ml.w'.I [MenuH] ***/
12:lf.d/*** getInterfaces = 'lf.d'.[[Luv; [Interfaces] ***/
13:od.I/*** getValidInterfaces = 'od.I'.[Z [ValidInterfaces] ***/
8:tha.c/*** getRSNPCNC = 'tha.c'.Lbaa; [NPCNC] ***/
40:kj.m/*** getItemDefLoader = 'kj.m'.Lgo; [ItemDefinition] ***/
37:gi.h/*** getSettingsArray = 'gi.h'.Lqo; [Settings] ***/
41:nf.c/*** getObjectDefLoader = 'nf.c'.Lql; [ObjectDefinition] ***/
39:bh.N/*** getRSItemHashTable = 'bh.N'.Lbaa; [GroundCache] ***/
36:ea.l/*** getSkillExperiences = 'ea.l'.[I [Experience] ***/
35:po.p/*** getSkillLevels = 'po.p'.[I [Levels] ***/
22:g.q/*** MapAngle = 'g.q'.F [MapAngle] ***/
23:fo.l/*** getDestX = 'fo.l'.I [DestX] ***/
24:jc.P/*** getDestY = 'jc.P'.I [DestY] ***/
9:gca.w/*** getPlayerCount = 'gca.w'.I [PlayerCount] ***/
10:ri.h/*** getPlayerIndexArray = 'ri.h'.[I [PlayerIndexes] ***/
11:rw.f/*** getRSPlayerArray = 'rw.f'.[Lcea; [Players] ***/
25:ov.q/*** getCamPosX = 'ov.q'.I [CamX] ***/
26:sk.eb/*** getCamPosY = 'sk.eb'.I [CamY] ***/
27:ai.e/*** getCamPosZ = 'ai.e'.I [CamZ] ***/
28:ga.p/*** getCamCurveX = 'ga.p'.[[[B [CamCurveX] ***/
29:el.b/*** getCamCurveY = 'el.b'.[I [CamCurveY] ***/
32:ud.m/*** getGroundTiles = 'ud.m'.[[[Lve; [GroundTiles] ***/
42:ce.i/*** getCrossHairColor = 'ce.i'.I [CrossHairColor] ***/
45:b/*** hook.chatline.getName = 'we.b'.Ljava/lang/String; [Message_Name] ***/
46:k/*** hook.chatline.getMessage = 'we.k'.Ljava/lang/String; [Message_Message] ***/
66:l/*** hook.rsinteractable.getX = 'uq.l'.I [Animable_X] ***/
67:t/*** hook.rsinteractable.getY = 'uq.t'.I [Animable_Y] ***/
68:j/*** hook.rsinteractable.getPlane = 'uq.j'.B [Animable_Plane] ***/
59:Uc/*** hook.rsplayer.getTeam = 'cea.Uc'.I [Player_Team] ***/
60:td/*** hook.rsplayer.getLevel = 'cea.td'.I [Player_Level] ***/
61:Qc/*** hook.rsplayer.getName = 'cea.Qc'.Ljava/lang/String; [Player_Name] ***/
62:Rd/*** hook.rsplayer.PlayerDef = 'cea.Rd'.Lwh; [Player_Definition] ***/
63:Hd/*** hook.rsplayer.getSkillLevels = 'cea.Hd'.I [Player_SkillLevels] ***/
51:wb/*** hook.rscharacter.getAnimation = 'ni.wb'.I [Character_Animation] ***/
52:Jc/*** hook.rscharacter.LocationX = 'ni.Jc'.[I [Character_X] ***/
53:Kc/*** hook.rscharacter.LocationY = 'ni.Kc'.[I [Character_Y] ***/
54:fc/*** hook.rscharacter.getHeight = 'ni.fc'.I [Character_Height] ***/
55:Bc/*** hook.rscharacter.getOrientation = 'ni.Bc'.I [Character_Orientation] ***/
56:xb/*** hook.rscharacter.LoopCycleStatus = 'ni.xb'.I [Character_LoopCycleStatus] ***/
57:wc/*** hook.rscharacter.getHPRatio = 'ni.wc'.I [Character_HPRatio] ***/
58:mb/*** hook.rscharacter.getInteracting = 'ni.mb'.I [Character_Interacting] ***/
69:e/*** hook.animablenode.getAnimable = 'fe.e'.Lht; [AnimableNode_Animable] ***/
70:b/*** hook.animablenode.getNext = 'fe.b'.Lfe; [AnimableNode_Next] ***/
47:J/*** hook.rsanimable.getX1 = 'ht.J'.S [Animable_AreaX1] ***/
49:M/*** hook.rsanimable.getX2 = 'ht.M'.S [Animable_AreaX2] ***/
48:C/*** hook.rsanimable.getY1 = 'ht.C'.S [Animable_AreaY1] ***/
50:I/*** hook.rsanimable.getY2 = 'ht.I'.S [Animable_AreaY2] ***/
64:l/*** hook.playerdef.getEquipment = 'wh.l'.[I [PlayerDefinition_Equipment] ***/
65:o/*** hook.playerdef.getModelID = 'wh.o'.J [PlayerDefinition_ModelID] ***/
92:id/*** hook.rsnpc.getNPCDef = 'wq.id'.Lsk; [NPC_Definition] ***/
93:U/*** hook.npcdef.getActions = 'sk.U'.[Ljava/lang/String; [NPCDefinition_Actions] ***/
94:pb/*** hook.npcdef.getName = 'sk.pb'.Ljava/lang/String; [NPCDefinition_Name] ***/
97:j/*** hook.rsnpcnode.getRSNPC = 'qha.j'.Lwq; [NPCNode_NPC] ***/
80:s/*** hook.sdviewport.zOff = 'bg.s'.F [ViewPort_zOff] ***/
81:r/*** hook.sdviewport.zX = 'bg.r'.F [ViewPort_zX] ***/
82:o/*** hook.sdviewport.zY = 'bg.o'.F [ViewPort_zY] ***/
83:C/*** hook.sdviewport.zZ = 'bg.C'.F [ViewPort_zZ] ***/
84:g/*** hook.sdviewport.xOff = 'bg.g'.F [ViewPort_xOff] ***/
85:y/*** hook.sdviewport.xX = 'bg.y'.F [ViewPort_xX] ***/
86:G/*** hook.sdviewport.xY = 'bg.G'.F [ViewPort_xY] ***/
87:E/*** hook.sdviewport.xZ = 'bg.E'.F [ViewPort_xZ] ***/
88:k/*** hook.sdviewport.yOff = 'bg.k'.F [ViewPort_yOff] ***/
89:f/*** hook.sdviewport.yX = 'bg.f'.F [ViewPort_yX] ***/
90:J/*** hook.sdviewport.yY = 'bg.J'.F [ViewPort_yY] ***/
91:d/*** hook.sdviewport.yZ = 'bg.d'.F [ViewPort_yZ] ***/
71:I/*** hook.sdtoolkit.Viewport = 'fga.I'.Lbg; [ToolKit_Viewport] ***/
72:gb/*** hook.sdtoolkit.xMin = 'fga.gb'.I [ToolKit_xMin] ***/
73:O/*** hook.sdtoolkit.xMax = 'fga.O'.I [ToolKit_xMax] ***/
74:hb/*** hook.sdtoolkit.yMin = 'fga.hb'.I [ToolKit_yMin] ***/
75:V/*** hook.sdtoolkit.yMax = 'fga.V'.I [ToolKit_yMax] ***/
76:L/*** hook.sdtoolkit.zMin = 'fga.L'.I [ToolKit_zMin] ***/
77:S/*** hook.sdtoolkit.zMax = 'fga.S'.I [ToolKit_zMax] ***/
78:U/*** hook.sdtoolkit.xScale = 'fga.U'.I [ToolKit_xScale] ***/
79:db/*** hook.sdtoolkit.yScale = 'fga.db'.I [ToolKit_yScale] ***/
98:i/*** hook.sdplane.getTileHeights = 's.i'.[[I [Plane_TileHeights] ***/
99:N/*** hook.ldmodel.getIndices1 = 'mda.N'.[S [Model_Indexes1] ***/
100:T/*** hook.ldmodel.getIndices2 = 'mda.T'.[S [Model_Indexes2] ***/
101:P/*** hook.ldmodel.getIndices3 = 'mda.P'.[S [Model_Indexes3] ***/
102:Pb/*** hook.ldmodel.getPointsX = 'mda.Pb'.[I [Model_xPoints] ***/
103:Wb/*** hook.ldmodel.getPointsY = 'mda.Wb'.[I [Model_yPoints] ***/
104:M/*** hook.ldmodel.getPointsZ = 'mda.M'.[I [Model_zPoints] ***/
126:j/*** hook.nodelistcache.getNodeList = 'jj.j'.Lmba; [NodeListCache_NodeList] ***/
127:s/*** hook.nodelist.getCurrent = 'mba.s'.Lno; [NodeList_Current] ***/
128:l/*** hook.nodelist.getHead = 'mba.l'.Lno; [NodeList_Head] ***/
129:e/*** hook.node.getNext = 'no.e'.Lno; [Node_Next] ***/
131:c/*** hook.node.getPrevious = 'no.c'.Lno; [Node_Previous] ***/
130:g/*** hook.node.getID = 'no.g'.J [Node_ID] ***/
132:w/*** hook.menugroupnode.getNodeSubListItems = 'ida.w'.Lvu; [MenuGroupNode_NodeSubListItems] ***/
133:m/*** hook.nodesublist.getHead = 'vu.m'.Lob; [NodeSubList_Head] ***/
134:j/*** hook.nodesub.getNext = 'ob.j'.Lob; [NodeSub_Next] ***/
123:w/*** hook.menu.getAction = 'sba.w'.Ljava/lang/String; [Menu_Action] ***/
124:A/*** hook.menu.getOption = 'sba.A'.Ljava/lang/String; [Menu_Option] ***/
105:c/*** hook.rsinterface.GetTextColor = 'uv.c'.I [Interface_TextColor] ***/
106:u/*** hook.rsinterface.GetModelID = 'uv.u'.I [Interface_ModelID] ***/
107:fb/*** hook.rsinterface.GetX = 'uv.fb'.I [Interface_X] ***/
108:jb/*** hook.rsinterface.GetY = 'uv.jb'.I [Interface_Y] ***/
109:h/*** hook.rsinterface.GetWidth2 = 'uv.h'.I [Interface_Width] ***/
110:lc/*** hook.rsinterface.GetHeight2 = 'uv.lc'.I [Interface_Height] ***/
111:Pc/*** hook.rsinterface.IsHidden = 'uv.Pc'.Z [Interface_Hidden] ***/
112:kd/*** hook.rsinterface.GetParentID = 'uv.kd'.I [Interface_ParentID] ***/
113:hb/*** hook.rsinterface.GetID = 'uv.hb'.I [Interface_ID] ***/
114:db/*** hook.rsinterface.GetComponentID = 'uv.db'.I [Interface_ComponentID] ***/
115:bb/*** hook.rsinterface.GetComponentStackSize = 'uv.bb'.I [Interface_StackSize] ***/
116:Fb/*** hook.rsinterface.GetComponentIndex = 'uv.Fb'.I [Interface_ComponentIndex] ***/
117:jd/*** hook.rsinterface.GetActions = 'uv.jd'.[Ljava/lang/String; [Interface_Actions] ***/
118:kb/*** hook.rsinterface.GetComponentName = 'uv.kb'.Ljava/lang/String; [Interface_ComponentName] ***/
119:ad/*** hook.rsinterface.GetText = 'uv.ad'.Ljava/lang/String; [Interface_Text] ***/
120:ac/*** hook.rsinterface.GetTextureID = 'uv.ac'.I [Interface_TextureID] ***/
121:nc/*** hook.rsinterface.GetComponents = 'uv.nc'.[Luv; [Interface_Components] ***/
122:Mb/*** hook.rsinterface.getBoundsArrayIndex = 'uv.Mb'.I [Interface_BoundsIndex] ***/
135:o/*** hook.hashtable.getNodes = 'baa.o'.[Lno; [HashTable_Nodes] ***/
137:o/*** hook.rsitem.getStackSize = 'kn.o'.I [Item_StackSize] ***/
136:j/*** hook.rsitem.getID = 'kn.j'.I [Item_ID] ***/
138:n/*** hook.itemdefloader.getCache = 'go.n'.Lgw; [ItemDefinitionLoader_Cache] ***/
139:o/*** hook.itemdef.getGroundActions = 'ov.o'.[Ljava/lang/String; [ItemDefinition_GroundItems] ***/
140:n/*** hook.itemdef.getActions = 'ov.n'.[Ljava/lang/String; [ItemDefinition_Actions] ***/
141:a/*** hook.itemdef.isMembers = 'ov.a'.Z [ItemDefinition_Members] ***/
142:H/*** hook.itemdef.getLoader = 'ov.H'.Lgo; [ItemDefinition_Loader] ***/
143:j/*** hook.cache.getTable = 'gw.j'.Lbaa; [Cache_Table] ***/
144:p/*** hook.cache.getList = 'gw.p'.Lvu; [Cache_List] ***/
145:b/*** hook.cache.getInitialCount = 'gw.b'.I [Cache_InitialCount] ***/
146:m/*** hook.cache.getSpaceLeft = 'gw.m'.I [Cache_SpaceLeft] ***/
125:d/*** hook.settings.getData = 'qo.d'.[I [Settings_Data] ***/
147:m/*** hook.objectdefloader.getCache = 'ql.m'.Lgw; [ObjectDefinitionLoader_Cache] ***/
148:i/*** hook.rsground.getFloorDecoration = 've.i'.Luda; [Ground_FloorDecoration] ***/
149:f/*** hook.rsground.getWallDecoration2 = 've.f'.Lki; [Ground_WallDecoration2] ***/
150:o/*** hook.rsground.getWallDecoration1 = 've.o'.Lki; [Ground_WallDecoration1] ***/
151:j/*** hook.rsground.getWallObject2 = 've.j'.Lpn; [Ground_WallObject2] ***/
152:g/*** hook.rsground.getWallObject1 = 've.g'.Lpn; [Ground_WallObject1] ***/
153:k/*** hook.rsground.getRSAnimableList = 've.k'.Lfe; [Ground_AnimableList] ***/
154:kb/*** hook.wallobjectdata.getID = 'dfa.kb'.S [WallObjectData_ID] ***/
155:X/*** hook.wallobjectdata.getModel = 'dfa.X'.Lka; [WallObjectData_Model] ***/
156:P/*** hook.walldecorationdata.getID = 'sfa.P'.S [WallDecorationData_ID] ***/
157:gb/*** hook.walldecorationdata.getModel = 'sfa.gb'.Lka; [WallDecorationData_Model] ***/
161:hb/*** hook.floordecorationdata.getID = 'ra.hb'.S [FloorDecorationData_ID] ***/
162:X/*** hook.floordecorationdata.getModel = 'ra.X'.Lka; [FloorDecorationData_Model] ***/
165:V/*** hook.interactiveobject.getModel = 'gj.V'.Lka; [InteractiveObject_Model] ***/
166:sb/*** hook.interactiveobject.getID = 'gj.sb'.S [InteractiveObject_ID] ***/
167:db/*** hook.interactiveobjectsub.getObjectData = 'bo.db'.Ldj; [InteractiveObjectSub_Composite] ***/
163:l/*** hook.rsobjectcomposite.getID = 'dj.l'.I [ObjectComposite_ID] ***/
164:E/*** hook.rsobjectcomposite.getModel = 'dj.E'.Lka; [ObjectComposite_Model] ***/
160:J/*** hook.floordecorationsub2.getComposite = 'jga.J'.Ldj; [FloorDecorationSub2_Composite] ***/
158:cb/*** hook.wallobjectsub2.getComposite = 'oq.cb'.Ldj; [WallObjectSub2_Composite] ***/
159:M/*** hook.walldecorationsub2.getComposite = 're.M'.Ldj; [WallDecorationSub2_Composite] ***/
95:fb
96:M
18:wp.h
19:dga.e
20:nr.b
21:id.k
168:iv.h
169:sg.d
170:ka.m
171:th.u
172:Pc
173:Gc
174:gm.q
175:vl.k/*** Dismiss bounds, needs to be hooked xD. ***/
176:gca.v
177:e
178:g.q
179:qp.Q
180:kha.h