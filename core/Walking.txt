{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
Walking procedures

---------------------------------------------------------

  * function r_GetFlagPosition: TRSTile;
     By: Timer
 * function r_ClickTile(const Tile: TRSTile): Boolean;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{
This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project (https://github.com/Timer/RRL).

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
}

function NULL_RSTILE: TRSTile;
var
  T: TRSTile;
begin
  with T do
  begin
    x := -1;
    y := -1;
  end;
  Result := T;
end;

function r_GetFlagPosition: TRSTile;
var
  fx, fy: Integer;
begin
  fx := _InvokeInteger(0, r_Hooks[hook_FlagX]);
  fy := _InvokeInteger(0, r_Hooks[hook_FlagY]);
  if (fx < 0) or (fy < 0) then
    Result := NULL_RSTILE
  else
    Result := RSTile(_InvokeInteger(0, r_Hooks[hook_BaseX]) + fx,
                     _InvokeInteger(0, r_Hooks[hook_BaseY]) + fy);
end;

function r_ClickTile(const Tile: TRSTile): Boolean;
var
  r_ClickMousePosition: TPoint;
  r_ClickMouseX, r_ClickMouseY: Integer;
begin
  Result := False;
  if (r_TileOnMinimap(Tile)) then
  begin
    r_ClickMousePosition := r_TileToMinimap(Tile);
    r_MoveMouse(r_ClickMousePosition.x + RandomRange(-5, 5), r_ClickMousePosition.y + RandomRange(-5, 5), 0, 0);
    r_ClickMousePosition := r_TileToMinimap(Tile);
    if (Distance(r_ClickMouseX, r_ClickMouseY, r_ClickMousePosition.x, r_ClickMousePosition.y) > 5) then
    begin
      if (not r_TileOnMinimap(Tile)) then
        Exit;
      r_ClickMouse(r_ClickMousePosition.x + RandomRange(-5, 5), r_ClickMousePosition.y + RandomRange(-5, 5), 0, 0, True);
    end else
      r_ClickMouse(r_ClickMouseX, r_ClickMouseY, 0, 0, True);
    Result := True;
  end;
end;