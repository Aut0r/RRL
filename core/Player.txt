{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
My Player file.

---------------------------------------------------------

 * function r_GetLocation: TRSTile;
     By: Timer
 * function r_GetAnimation: Integer;
     By: Timer
 * function r_GetSpeed: Integer;
     By: Timer
 * function r_IsAnimating: Boolean;
     By: Timer
 * function r_IsMoving: Boolean;
     By: Timer
 * function r_IsFighting: Boolean;
     By: Timer
 * function r_GetOrientation: Integer;
     By: Timer
 * function r_GetLevel: Integer;
     By: Timer
 * function r_GetInteracting: LongInt;
     By: Timer
 * function r_GetHPRatio: Integer;
     By: Timer
 * function r_GetLocalPlayer: TPlayer;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{
This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project (https://github.com/Timer/RRL).

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
}

function r_GetLocation: TRSTile;
var
  OurPlayerPath: LongInt;
  BaseX, BaseY, LocalX, LocalY: Integer;
  t: TRSTile;
begin
  with t do
  begin
    x := -1;
    y := -1;
  end;
  try
    OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
    BaseX := SmartGetFieldInt(0, r_Hooks[hook_BaseX]);
    BaseY := SmartGetFieldInt(0, r_Hooks[hook_BaseY]);
    LocalX := SmartGetFieldInt(OurPlayerPath, r_Hooks[hook_Animable_X]);
    LocalY := SmartGetFieldInt(OurPlayerPath, r_Hooks[hook_Animable_Y]);
    Result := RSTile(BaseX + LocalX div 512, BaseY + LocalY div 512);
  finally // We want to rid of memory leaks.
    try
      SmartFreeObject(OurPlayerPath);
    except
      Result := t;
      WriteLn('There was an issue with GetLocation, tried to close a memory leak(?), dunno if it''s still there or not.');
    end;
  end;
end;

function r_GetAnimation: Integer;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
  Result := r_GetCharacterAnimation(OurPlayerPath, True);
end;

function r_GetSpeed: Integer;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
  Result := r_GetCharacterMovement(OurPlayerPath, True);
end;

function r_IsAnimating: Boolean;
begin
  Result := r_GetAnimation > -1;
end;

function r_IsMoving: Boolean;
begin
  Result := r_GetSpeed > 0;
end;

function r_IsFighting: Boolean;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
  Result := r_GetCharacterFighting(OurPlayerPath, True);
end;

function r_GetOrientation: Integer;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
  Result := r_GetCharacterOrientation(OurPlayerPath, True);
end;

function r_GetLevel: Integer;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
  Result := r_GetCharacterLevel(OurPlayerPath, False, True);
end;

function r_GetInteracting: LongInt;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
  Result := r_GetCharacterInteracting(OurPlayerPath, True);
end;

function r_GetHPRatio: Integer;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
  Result := r_GetCharacterHPRatio(OurPlayerPath, True);
end;

function r_GetLocalPlayer: TPlayer;
var
  CharPath, CharDefPath, Str: LongInt;
  i: Integer;
begin
  try
    CharPath := SmartGetFieldObject(0, r_Hooks[hook_LocalPlayer]);
    CharDefPath := SmartGetFieldObject(CharPath, r_Hooks[hook_Player_Definition]);
    with Result do
    begin
      with Character do
      begin
        Animation := SmartGetFieldInt(CharPath, r_Hooks[hook_Character_Animation]);
        Orientation := Round(FixD(180 + (SmartGetFieldInt(CharPath, r_Hooks[hook_Character_Orientation]) * 45) / 2048));
        LoopCycleStatus := SmartGetFieldInt(CharPath, r_Hooks[hook_Character_LoopCycleStatus]);
        HPRatio := SmartGetFieldInt(CharPath, r_Hooks[hook_Character_HPRatio]);
        Speed := SmartGetFieldInt(CharPath, r_Hooks[hook_Character_Movement]);
        Height := SmartGetFieldInt(CharPath, r_Hooks[hook_Character_Height]);
        Location.x := SmartGetFieldInt(0, r_Hooks[hook_BaseX]) + SmartGetFieldInt(CharPath, r_Hooks[hook_Animable_X]) div 512;
        Location.y := SmartGetFieldInt(0, r_Hooks[hook_BaseY]) + SmartGetFieldInt(CharPath, r_Hooks[hook_Animable_Y]) div 512;
        Interacting := SmartGetFieldInt(CharPath, r_Hooks[hook_Character_Interacting]);
        Model := 0;//TODO model.
        IsFighting := LoopCycleStatus > SmartGetFieldInt(0, r_Hooks[hook_LoopCycle]);
        IsMoving := Speed > 0;
        IsAnimating := Animation > -1;
        IsIdle := (not IsFighting) and (not IsAnimating) and (not IsMoving);
      end;
      Index := -1;
      Team := SmartGetFieldInt(CharPath, r_Hooks[hook_Player_Team]);
      Level := SmartGetFieldInt(CharPath, r_Hooks[hook_Player_Level]);
      Str := SmartGetFieldObject(CharPath, r_Hooks[hook_Player_Name]);
      Name := r_GetString(Str);
      SmartFreeObject(Str);
      for i := 0 to 24 do
      begin
        Levels[i] := r_GetSkillLevel(i);
        Experiences[i] := r_GetSkillExperience(i);
      end;
      for i := 0 to 10 do
        Equipment[i] := SmartGetFieldArrayInt(CharDefPath, r_Hooks[hook_PlayerDefinition_Equipment], i) - 1073741824;
    end;
  finally
    try
      SmartFreeObject(CharPath);
    except
    end;
    try
      SmartFreeObject(CharDefPath);
    except
    end;
  end;
end;