{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
My Player file.

---------------------------------------------------------

 * function r_GetLocation: TRSTile;
     By: Timer
 * function r_GetAnimation: Integer;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{
This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project (https://github.com/Timer/RRL).

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
}

function r_GetLocation: TRSTile;
var
  OurPlayerPath: LongInt;
  BaseX, BaseY, LocalX, LocalY: Integer;
  t: TRSTile;
begin
  with t do
  begin
    x := -1;
    y := -1;
  end;
  try
    OurPlayerPath := _InvokeObject(0, r_Hooks[hook_MyPlayer]);
    BaseX := _InvokeInteger(0, r_Hooks[hook_BaseX]);
    BaseY := _InvokeInteger(0, r_Hooks[hook_BaseY]);
    LocalX := _InvokeInteger(OurPlayerPath, r_Hooks[hook_LocalX]);
    LocalY := _InvokeInteger(OurPlayerPath, r_Hooks[hook_LocalY]);
    Result := RSTile(BaseX + LocalX div 512, BaseY + LocalY div 512);
  finally // We want to rid of memory leaks.
    try
      _FreeObject(OurPlayerPath);
    except
      Result := t;
      WriteLn('There was an issue with GetLocation, tried to close a memory leak(?), dunno if it''s still there or not.');
    end;
  end;
end;

function r_GetAnimation: Integer;
var
  OurPlayerPath: LongInt;
begin
  OurPlayerPath := _InvokeObject(0, r_Hooks[hook_MyPlayer]);
  Result := r_GetCharacterAnimation(OurPlayerPath, True);
end;