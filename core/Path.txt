{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
Path routines

---------------------------------------------------------

 * function NULL_PATH: TPath;
     By: Timer
 * function PathStart(const ThePath: TPath): TRSTile;
     By: Timer
 * function PathEnd(const ThePath: TPath): TRSTile;
     By: Timer
 * function PathNextTile(const ThePath: TPath): TRSTile;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{
This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project (https://github.com/Timer/RRL).

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
}

function NULL_PATH: TPath;
var
  NullPath: TPath;
  TileArray: TRSTileArray;
  HandlerArray: TIntegerArray;
begin
  SetLength(TileArray, 0);
  SetLength(HandlerArray, 0);
  with NullPath do
  begin
    Tiles := TileArray;
    Handlers := HandlerArray;
  end;
  Result := NullPath;
end;

function PathStart(const ThePath: TPath): TRSTile;
begin
  Result := NULL_RSTile;
end;

function PathEnd(const ThePath: TPath): TRSTile;
begin
  Result := NULL_RSTile;
end;

function PathNextTile(const ThePath: TPath): TRSTile;
begin
  Result := NULL_RSTile;
end;
