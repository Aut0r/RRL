{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
Menu routines.

---------------------------------------------------------

 * function IsMenuOpen: Boolean;
     By: Timer
 * function IsMenuTabbed: Boolean;
     By: Timer
 * function GetMenuCount: Integer;
     By: Timer
 * function GetMenuText: TStringArray;
     By: Timer
 * function GetMenuIndex(Text: string): Integer;
     By: Timer
 * function ClickMenuIndex(Index: Integer): Boolean;
     By: Timer
 * function Interact(Option: string): Boolean;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsMenuOpen: Boolean;
begin
  Result := SmartGetFieldBoolean(0, hook_MenuOpen);
end;

function IsMenuTabbed: Boolean;
begin
  Result := SmartGetFieldBoolean(0, hook_MenuTabbed);
end;

function GetMenuCount: Integer;
begin
  Result := SmartGetFieldInt(0, hook_MenuCount);
end;

function GetMenuText: TStringArray;
var
  Nodes, Head, Next, Count, JavaString, Last: LongInt;
  Item: string;
begin
  Nodes := SmartGetFieldObject(0, hook_MenuNodeList);
  Head := SmartGetFieldObject(Nodes, hook_Node_Head);
  Next := Head;
  Count := GetMenuCount;
  SetLength(Result, Count);
  repeat
    JavaString := SmartGetFieldObject(Next, hook_Menu_Action);
    if (JavaString = 0) then
    begin
      SmartFreeObject(JavaString);
      Break;
    end;
    Item := GetString(JavaString);
    SmartFreeObject(JavaString);
    JavaString := SmartGetFieldObject(next, hook_Menu_Option);
    Item := Item + ' ' + GetString(JavaString);
    SmartFreeObject(JavaString);
    Result[count - 1] := RemoveJunk(Item);
    Last := Next;
    Next := SmartGetFieldObject(Last, hook_Node_Next);
    SmartFreeObject(Last);
    Dec(Count);
  until (Count <= 0);
  SmartFreeObject(Next);
  SmartFreeObject(Head);
  SmartFreeObject(Nodes);
end;

function GetMenuIndex(Text: string): Integer;
var
  Menu: TStringArray;
  i: Integer;
begin
  Menu := GetMenuText;
  Result := -1;
  if (High(Menu) > -1) then
    for i := 0 to High(Menu) do
    begin
      if (Pos(Lowercase(Text), Lowercase(Menu[i])) <> 0) then
      begin
        Result := i;
        Exit;
      end;
    end;
end;

function ClickMenuIndex(Index: Integer): Boolean;
var
  AllItems: TStringArray;
  Item: string;
  xOff, yOff: Integer;
  P: TPoint;
  T, MC, SC, SCA: LongInt;
begin
  mc := 1;
  AllItems := GetMenuText;
  if (Length(AllItems) < Index) then
  begin
    Result := False;
    Exit;
  end;
  if (Index = -1) then
  begin
    Result := False;
    Exit;
  end;
  if (not IsMenuOpen) then
  begin
    {$IFDEF SIMBA}
      ClickMouse2(False);
    {$ELSE}
      GetMousePos(xOff, yOff);
      ClickWindMouse(xOff, yOff, 0, 0, False);
    {$ENDIF}
    T := GetSystemTime;
    while (GetSystemTime - T < 1000) and (not IsMenuOpen) do
      Wait(50);
    if (not IsMenuOpen) then
      Exit;
    AllItems := GetMenuText;
    if (Length(AllItems) < Index) then
    begin
      Result := False;
      Exit;
    end;
  end;
  Item := AllItems[Index];
  P := Point(SmartGetFieldInt(0, hook_MenuX), SmartGetFieldInt(0, hook_MenuY));
  if (IsMenuTabbed) then
  begin
    //We can't click sub-menus yet!
    Result := False;
  end else
  begin
    xOff := RandomRange(4, 4 + Random(Length(Item) * 4 - 4));
    yOff := 21 + (16 * index) + RandomRange(2, 10);
    {$IFDEF SIMBA}
      Mouse(P.x + xOff, P.y + yOff, 0, 0, True);
    {$ELSE}
      ClickWindMouse(P.x + xOff, P.y + yOff, 0, 0, True);
    {$ENDIF}
    Wait(RandomRange(80, 100));
    Result := not IsMenuOpen;
    Exit;
  end;
  while (IsMenuOpen) do
  begin
    {$IFDEF SIMBA}
      MMouse(Random(MSX2), Random(MSY2), 0, 0);
    {$ELSE}
      MoveWindMouseEx(Random(515), Random(337), 0, 0, 15);
    {$ENDIF}
    Wait(RandomRange(100, 200));
  end;
end;

function Interact(Option: string): Boolean;
var
  Index, x, y: Integer;
  AllItems: TStringArray;
  T: LongInt;
begin
  Index := GetMenuIndex(option);
  if (Index = -1) then
  begin
    Result := False;
    Exit;
  end;
  AllItems := GetMenuText;
  if (Length(AllItems) < Index) then
  begin
    Result := False;
    Exit;
  end;
  if (not IsMenuOpen) then
  begin
    {$IFDEF SIMBA}
      ClickMouse2(False);
    {$ELSE}
      GetMousePos(x, y);
      ClickWindMouse(x, y, 0, 0, False);
    {$ENDIF}
    T := GetSystemTime;
    while (GetSystemTime - T < 1000) and (not IsMenuOpen) do
      Wait(50);
    if (not IsMenuOpen) then
      Exit;
    AllItems := GetMenuText;
    if (Length(AllItems) < Index) then
    begin
      Result := False;
      Exit;
    end;
  end;
  Result := ClickMenuIndex(index);
end;