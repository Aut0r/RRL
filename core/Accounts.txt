{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
Accounts file.

---------------------------------------------------------

 * procedure r_SetNumberOfAccounts(const Amount: Integer);
     By: Timer
 * function r_ArePlayersActive: Boolean;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{
This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project (https://github.com/Timer/RRL).

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
}

procedure r_SetNumberOfAccounts(const Amount: Integer);
begin
  SetLength(r_Accounts, Amount);
end;

function r_ArePlayersActive: Boolean;
var
  i: Integer;
begin
  Result := Length(r_Accounts) > 0;
  for i := 0 to High(r_Accounts) do
    Result := Result and r_Accounts[i].Active;
end;