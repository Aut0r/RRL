{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
Players file.

---------------------------------------------------------

 * function GetLocation: TRSTile;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{
This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project (https://github.com/Timer/RRL).

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
}

function GetLocation: TRSTile;
var
  OurPlayerPath: LongInt;
  BaseX, BaseY, LocalX, LocalY: Integer;
begin
  try
    OurPlayerPath := SmartGetFieldObject(0, hook_MyPlayer);
    BaseX := SmartGetFieldInt(0, hook_BaseX);
    BaseY := SmartGetFieldInt(0, hook_BaseY);
    LocalX := SmartGetFieldInt(OurPlayerPath, hook_LocalX);
    LocalY := SmartGetFieldInt(OurPlayerPath, hook_LocalY);
    Result := RSTile(Round(BaseX + LocalX / 512), Round(BaseY + LocalY / 512));
  finally // We want to rid of memory leaks.
    try
      SmartFreeObject(OurPlayerPath);
    except
      WriteLn('There was an issue with GetLocation, tried to close a memory leak, dunno if it''s still there or not.');
    end;
  end;
end;