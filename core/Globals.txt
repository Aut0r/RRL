{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
RRL - Reflection Resource Library
Global File
 * Hosts global constants and variables.

---------------------------------------------------------

 * function LoadHooks: Boolean;
     By: Timer
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{
This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/
or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.

Copyright (C) 2010 - 2011 by Joe Haddad, all rights reserved.
This file is part of the RRL project.

For extended permissions please contact me by E-Mail, Timer150@Gmail.com.
}

{
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Current Client and Hooks version for
determining if the hooks are updated or not.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
}
var
  ClientVersion, HooksVersion: Integer; // Current reversions, declared in SetupRRL; or manually.

{
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Tile data types.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
}
type
  TRSTile = record
    x, y: Integer;
  end;

  TRSTileArray = array of TRSTile;

function RSTile(const tx, ty: Integer): TRSTile;//TRSTile constructor
var
  t: TRSTile;
begin
  with t do
  begin
    x := tx;
    y := ty;
  end;
  Result := t;
end;

{
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Hooks variables.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
}
var
  hook_MapAngle,
  hook_MyPlayer,
  hook_BaseX, hook_BaseY, hook_LocalX, hook_LocalY: string;

function LoadHooks: Boolean;
begin
  // TODO this.
  Result := False;
end;